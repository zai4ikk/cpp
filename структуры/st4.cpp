/*Dynamic10◦

. Дана вершина A1 непустого стека. Создать два новых стека,
переместив в первый из них все элементы исходного стека с четными
значениями, а во второй — с нечетными (элементы в новых стеках будут

располагаться в порядке, обратном исходному; один из этих стеков мо-
жет оказаться пустым). Вывести ссылки на вершины полученных стеков

(для пустого стека вывести константу null). Новые объекты типа Node не
создавать.*/

#include <iostream>
#include <stack>

int main() {
    // инициализируем стек A1
    std::stack<int> A1;
    A1.push(1);
    A1.push(2);
    A1.push(3);
    A1.push(4);
    A1.push(5);
    A1.push(6);

    // инициализируем два новых стека A2 и A3
    std::stack<int> A2;
    std::stack<int> A3;

    // перемещаем элементы из первого стека во второй, пока значение вершины первого стека четно
    while (!A1.empty() && A1.top() % 2 == 0) {
        A2.push(A1.top());
        A1.pop();
    }

    // перемещаем оставшиеся элементы из первого стека в третий, пока значение вершины первого стека нечетно
    while (!A1.empty() && A1.top() % 2 != 0) {
        A3.push(A1.top());
        A1.pop();
    }

    // выводим ссылки на вершины новых стеков
    if (!A2.empty()) {
        std::cout << "New top of A2: " << &A2.top() << std::endl;
    } else {
        std::cout << "A2 = null" << std::endl;
    }

    if (!A3.empty()) {
        std::cout << "New top of A3: " << &A3.top() << std::endl;
    } else {
        std::cout << "A3 = null" << std::endl;
    }

    return 0;
}